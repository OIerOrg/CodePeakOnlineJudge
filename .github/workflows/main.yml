name: Install and Backup

on:
  workflow_dispatch:

jobs:
  setup-hydro-cpolar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Hydro OJ
        run: |
          sudo su - root -c "ls -s -l"
          sudo su - root -c "cat backup/backup-parta* > backup.zip"
          sudo su - root -c "ls -s -l"
          sudo su - root -c "LANG=zh . <(curl https://hydro.ac/setup.sh)"
          sudo su - root -c "hydrooj restore backup.zip"

      - name: Install Cpolar
        run: |
          wget https://www.cpolar.com/static/downloads/install-release-cpolar.sh
          chmod +x install-release-cpolar.sh
          sudo ./install-release-cpolar.sh

      - name: Authenticate Cpolar
        run: |
          cpolar authtoken ${{ secrets.CPOLAR_AUTHTOKEN }}

      - name: Install Cpolar service
        run: |
          sudo cpolar service install

      - name: Start Cpolar service
        run: |
          sudo cpolar service start

      - name: Perform Backup
        run: |
          sudo su - root -c "
          whoami
          hydrooj backup
          OUTPUT=\$(ls -t | grep '^backup-' | head -n 1)
          if [[ -z \"\$OUTPUT\" ]]; then
              echo '未找到备份文件'
              exit 1
          fi
          echo \"找到备份文件: \$OUTPUT\"  # 输出 OUTPUT 的值
          rm backup -r -f
          mkdir backup
          split -b 10M \$OUTPUT \"./backup/backup-part\"
          rm \$OUTPUT"
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git push
          sleep 3600
          sudo su - root -c "
          whoami
          hydrooj backup
          OUTPUT=\$(ls -t | grep '^backup-' | head -n 1)
          if [[ -z \"\$OUTPUT\" ]]; then
              echo '未找到备份文件'
              exit 1
          fi
          echo \"找到备份文件: \$OUTPUT\"  # 输出 OUTPUT 的值
          rm backup -r -f
          mkdir backup
          split -b 10M \$OUTPUT \"./backup/backup-part\"
          rm \$OUTPUT"
          git add .
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
